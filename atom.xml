<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Loadign----</title>
  
  <subtitle>completion</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chentaospace.github.io/blog/"/>
  <updated>2018-11-09T09:18:57.089Z</updated>
  <id>https://chentaospace.github.io/blog/</id>
  
  <author>
    <name>猪想飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dev problem</title>
    <link href="https://chentaospace.github.io/blog/2018/11/09/dev-problem/"/>
    <id>https://chentaospace.github.io/blog/2018/11/09/dev-problem/</id>
    <published>2018-11-09T09:18:57.000Z</published>
    <updated>2018-11-09T09:18:57.089Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Idea 快捷键 全解析</title>
    <link href="https://chentaospace.github.io/blog/2018/11/09/idea-shortcut-key/"/>
    <id>https://chentaospace.github.io/blog/2018/11/09/idea-shortcut-key/</id>
    <published>2018-11-09T09:04:45.000Z</published>
    <updated>2018-12-17T09:42:17.127Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Alt+/ 代码提示<br>Ctrl + N 搜索文件<br>Alt+F7 寻找引用<br>Ctrl+Q 查看注释<br>Ctrl+b/Ctrl+mouse left 查看方法/对象/变量<br>Ctrl+F12 查看当类成员列表<br>Shift+F6 重命名<br>Ctrl+O 复写方法<br>Ctrl+I 实现方法<br>Ctrl+shift+space 类型/参数提示<br>Shift+鼠标←/鼠标中键 关闭当前打开文件<br>Alt+F1 打开快捷窗口<br>Esc 移动焦点到编辑区，<br>Shift+Esc 移动焦点到编辑区并关闭工具栏<br>F12 打开最后一次使用的工具栏<br>Ctrl+shift+space 智能补全<br>Ctrl+Alt+B 查看实现，代码引用<br>Ctrl+w 选中单词，语句等<br>Ctrl+Alt+V 重构，提取，提示<br>Ctrl+/ ctrl+shift+/ 注释 多行注释<br>Shift+F1 浏览器打开<br>Ctrl+shift+space 转型提示<br>Ctrl+D 快捷复制当前行<br>Alt+/ 定义变量时智能 生成变量名字<br>Ctrl+P 显示参数约束<br>ctrl+shift+backspace 返回上次代码编辑<br>Ctrl+shift+F7 | 匹配当前选中内容，F3下一个，shift+F3上一个<br>Ctrl+Q 查看方法注释<br>Ctrl+E 查看最近打开文件<br>F2/shift+f2 定位下一个/上一个错误<br>ctrl+j 代码模板<br>alt+/ 提示相关<br>Alt+up/down 光标移动至上一个/下一个方法<br>ctrl+shift+j 移除多余空格（压缩代码）<br>ctrl+shift+v 选择粘贴的文本<br>ctrl+H 查看类层级<br>Alt+F8 debug查看表达式的值<br>Hold alt debug查看表达式的值，以及方法值等<br>Ctrl+q 查看方法注释，ctrl+p 查看参数信息，ctrl+b查看方法引用<br>ctrl+alt+v 生成变量名<br>Ctrl+alt+shift +n 全局搜索<br>alt+shift+c 最近修改</p></blockquote>]]></content>
    
    <summary type="html">
    
      能使用的快捷键
    
    </summary>
    
      <category term="idea" scheme="https://chentaospace.github.io/blog/categories/idea/"/>
    
    
      <category term="指令" scheme="https://chentaospace.github.io/blog/tags/%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>学习笔记 混合</title>
    <link href="https://chentaospace.github.io/blog/2018/11/09/study-mix/"/>
    <id>https://chentaospace.github.io/blog/2018/11/09/study-mix/</id>
    <published>2018-11-09T09:02:31.000Z</published>
    <updated>2018-11-09T09:16:25.870Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="study" scheme="https://chentaospace.github.io/blog/categories/study/"/>
    
    
  </entry>
  
  <entry>
    <title>Git 指令全解析</title>
    <link href="https://chentaospace.github.io/blog/2018/11/09/git-command/"/>
    <id>https://chentaospace.github.io/blog/2018/11/09/git-command/</id>
    <published>2018-11-09T09:01:53.000Z</published>
    <updated>2018-12-17T09:39:18.065Z</updated>
    
    <content type="html"><![CDATA[<h3 id="指令后的名字为分支名"><a href="#指令后的名字为分支名" class="headerlink" title="-指令后的名字为分支名"></a>-指令后的名字为分支名</h3><blockquote><p>查看分支列表</p></blockquote><p>git branch</p><blockquote><p>查看分支以及提交信息</p></blockquote><p>git branch -v</p><blockquote><p>已经（或尚未）与当前分支合并的分支</p></blockquote><p>git branch –merge/–no-merged</p><blockquote><p>创建</p></blockquote><p>git checkout -b iss53</p><blockquote><p>删除</p></blockquote><p>git branch -d hotfix</p><blockquote><p>合并</p></blockquote><p>git merge hotfix</p><blockquote><p>切换</p></blockquote><p>git checkout master</p><blockquote><p>创建并切换</p></blockquote><p>git checkout -b ‘hotfix’</p><blockquote><p>提交</p></blockquote><p>git commit -a -m ‘made other changes’</p><blockquote><p>冲突显示</p></blockquote><p>git status</p><blockquote><p>标记冲突解决</p></blockquote><p>git add</p><blockquote><p>冲突工具</p></blockquote><p>git mergetool</p><blockquote><p>同步服务器数据</p></blockquote><p>git fetch origin</p><blockquote><p>添加远程分支（当前项目）</p></blockquote><p>git remote add 别名 地址</p><blockquote><p>推送本地分支</p></blockquote><p>git push (远程仓库名) (分支名)</p><blockquote><p>推送到远程指定分支</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin serverfix:awesomebranch</span><br></pre></td></tr></table></figure><p>值得注意的是，在 fetch 操作下载好新的远程分支之后，你仍然无法在本地编辑该远程仓库中的分支。换句话说，在本例中，你不会有一个新的 serverfix 分支，有的只是一个你无法移动的 origin/serverfix 指针。<br>如果要把该远程分支的内容合并到当前分支，可以运行 git merge origin/serverfix。如果想要一份自己的 serverfix 来开发，可以在远程分支的基础上分化出一个新的分支来：<br>git checkout -b serverfix origin/serverfix</p><p>这会切换到新建的 serverfix 本地分支，其内容同远程分支 origin/serverfix 一致，这样你就可以在里面继续开发了</p>]]></content>
    
    <summary type="html">
    
      日常学习
    
    </summary>
    
      <category term="git" scheme="https://chentaospace.github.io/blog/categories/git/"/>
    
    
      <category term="命令" scheme="https://chentaospace.github.io/blog/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>linux 命令</title>
    <link href="https://chentaospace.github.io/blog/2018/11/09/linux-command/"/>
    <id>https://chentaospace.github.io/blog/2018/11/09/linux-command/</id>
    <published>2018-11-09T09:01:08.000Z</published>
    <updated>2018-11-09T09:18:20.320Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="linux" scheme="https://chentaospace.github.io/blog/categories/linux/"/>
    
    
      <category term="命令" scheme="https://chentaospace.github.io/blog/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>重构-改善既有代码的设计 - 坏味道</title>
    <link href="https://chentaospace.github.io/blog/2018/11/09/code-refactoring/"/>
    <id>https://chentaospace.github.io/blog/2018/11/09/code-refactoring/</id>
    <published>2018-11-09T08:56:06.000Z</published>
    <updated>2018-12-17T09:22:18.718Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/VkJIHei.jpg" alt=""></p><h2 id="代码里散发出来的坏味道，你闻到了吗？"><a href="#代码里散发出来的坏味道，你闻到了吗？" class="headerlink" title="代码里散发出来的坏味道，你闻到了吗？"></a>代码里散发出来的坏味道，你闻到了吗？</h2><blockquote><p>1.重复代码。 </p></blockquote><blockquote><p>2.过长函数</p></blockquote><p>分解：有注释的地方，循环，通过易理解的函数名来封装</p><blockquote><p>3.过大的类</p></blockquote><blockquote><p>4.过长的参数列</p></blockquote><p>用对象传递</p><blockquote><p>5.发散式变化</p></blockquote><p>一个类受多种变化的影响。针对某一外界变化的所有相应修改，都只应该发生在单一类中，而这个新类的所有内容都应该反应此变化。</p><blockquote><p>6.散弹式修改</p></blockquote><p>（一种变化引发多个类响应修改）。把所有需要修改的代码放进同一个类</p><blockquote><p>7.依恋情结</p></blockquote><p>（函数对某个类的兴趣高过对自己所处类的兴趣，最通常的焦点便是数据）。方法归属：判断那个类拥有最多被此函数使用的数据，然后就把这个函数和那些数据摆在一起</p><blockquote><p>8.数据泥团</p></blockquote><p>（两个类中相同的字段，许多函数中相同的参数）。这些总是一起出现的数据应该拥有属于他们自己的对象</p><blockquote><p>9.基本类型偏执。</p></blockquote><p>运用小对象，将本来单独存在的数据值替换为对象。</p><blockquote><p>10.Switch statements。</p></blockquote><p> 考虑用多态来替换。或者使用Map的方式</p><blockquote><p>11.平行继承体系</p></blockquote><p>（为某个类添加一个子类，必须也为另一个类相应增加一个子类。某个继承体系的类名称前缀和另一个继承体系的类名称前缀完全相同）。让一个继承体系的实例引用另一个继承体系的实例。</p><blockquote><p>12.Lazy Class（冗余类）</p></blockquote><p>如果一个类的所得不值其身价，它就应该消失。</p><blockquote><p>13.Speculative Generality（夸夸其谈未来性）</p></blockquote><p>不要过多考虑将来所做。</p><blockquote><p>14.Temporary Field（令人迷惑的暂时字段）</p></blockquote><p>某个仅为特定情况而设的变量及相关代码抽取为一个类。</p><blockquote><p>15.过度耦合的消息链。</p></blockquote><blockquote><p>16.Middle Man（中间人）<br>减少没有用的委托</p></blockquote><blockquote><p>17.Inappropriate Intimact（狎昵关系）</p></blockquote><p>把两者共同点提炼到一个安全地点，</p><blockquote><p>18.Alternative Classes Different Interfaces（异曲同工的类）</p></blockquote><p>如果两个函数做同一件事情，却有着不同的签名运用move method。如果重复引入代码才能完成则考虑抽取为父类</p><blockquote><p>19.Incomplete Library Class（不完美的库类）</p></blockquote><p>引入外来方法或本地扩展</p><blockquote><p>20.Data Class（纯稚的数据类）</p></blockquote><blockquote><p>21.Refused Bedquest（被拒绝的遗赠）</p></blockquote><blockquote><p>22.Comments（过多的注释）</p></blockquote>]]></content>
    
    <summary type="html">
    
      天天都在写代码，代码的质量到底如何？Bug层出不穷？大朗 该吃💊了~~
    
    </summary>
    
      <category term="book" scheme="https://chentaospace.github.io/blog/categories/book/"/>
    
    
      <category term="重构" scheme="https://chentaospace.github.io/blog/tags/%E9%87%8D%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>java 编程思想</title>
    <link href="https://chentaospace.github.io/blog/2018/11/09/think-in-java/"/>
    <id>https://chentaospace.github.io/blog/2018/11/09/think-in-java/</id>
    <published>2018-11-09T08:54:57.000Z</published>
    <updated>2018-11-09T09:50:59.931Z</updated>
    
    <summary type="html">
    
      java 类书籍的经典之作，没有看这本书的灵魂是不完整的🌞
    
    </summary>
    
      <category term="book" scheme="https://chentaospace.github.io/blog/categories/book/"/>
    
    
      <category term="笔记" scheme="https://chentaospace.github.io/blog/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Mark down 语法 -- 入门</title>
    <link href="https://chentaospace.github.io/blog/2018/11/06/markdown-notes/"/>
    <id>https://chentaospace.github.io/blog/2018/11/06/markdown-notes/</id>
    <published>2018-11-06T07:52:35.000Z</published>
    <updated>2018-12-17T09:39:30.590Z</updated>
    
    <content type="html"><![CDATA[<p>用到的语法记录</p><h2 id="What-and-why❓"><a href="#What-and-why❓" class="headerlink" title="What and why❓"></a>What and why❓</h2><p><a href="https://baike.baidu.com/item/markdown/3245829?fr=aladdin" target="_blank" rel="noopener">mark down（百度）</a><br><a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">mark down（维基百科）</a></p><h2 id="How❓"><a href="#How❓" class="headerlink" title="How❓"></a>How❓</h2><p>🔆子曰：工欲善其事，必先利其器，我们✍文章怎么能没有一个好的编辑器呢，开始用的是<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a>，感觉不是很喜欢，因为预览不能和代码在同一个窗口（请知道的童鞋给我嗦🍗噢）。后来选择了<a href="http://markdownpad.com/" target="_blank" rel="noopener">mark downpad</a>，这个用起来还不错。这个安装好了之后可能会报错不能预览，是少了插件，去下插件安装就好了。</p><blockquote><p>言归正传，进入正题。</p></blockquote><p>学习一门语言，首先要学习的就是它的语法，如果精通任意一种编程语言，而后再学习其他语言是很快的。接下来一起学习下 mark down 的那些语法吧✊~~</p><h2 id="mark-down中的语法标记"><a href="#mark-down中的语法标记" class="headerlink" title="mark down中的语法标记"></a>mark down中的语法标记</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## mark down中的语法标记</span><br></pre></td></tr></table></figure><p>上面代码中的两个#代表二级标题与html h1-h6级标题对应，html基本姿势了~不知道的同学回去复习噢😀<br>❗❗❗##后面需要跟一个空格</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote><p>🔷 引用是这么个效果</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用标记是这么个效果</span><br></pre></td></tr></table></figure><p>⛔注意：标记和你的文字之间要空一行，不然后面的文字就和标记内容就连一起了😂</p><h3 id="插入超链接的三种方法"><a href="#插入超链接的三种方法" class="headerlink" title="插入超链接的三种方法"></a>插入超链接的三种方法</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p><a href="https://baike.baidu.com/item/markdown/3245829?fr=aladdin" target="_blank" rel="noopener">mark down（百度）</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mark down（百度）][1]</span><br><span class="line">[1]: https://baike.baidu.com/item/markdown/3245829?fr=aladdin</span><br></pre></td></tr></table></figure></p><p>文章开头使用的是这种方式，把url地址定义在最后面，统一管理</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p><a href="https://www.baidu.com&quot;" target="_blank" rel="noopener">百度首页</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度首页](https://www.baidu.com&quot;)</span><br></pre></td></tr></table></figure></p><p>在需要的地方直接插入，方便直观</p><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><p><a href="https://github.com/SeayXu" target="_blank" rel="noopener">https://github.com/SeayXu</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;https://github.com/SeayXu&gt;</span><br></pre></td></tr></table></figure></p><p>三种方法都实现超链接的功能，具体用那种看自己吧~，跟人喜欢用第一种，可能是写论文的后遗症！🚑</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello ~ and hello again ~</span><br></pre></td></tr></table></figure><blockquote><p>```<br>hello ~ and hello again ~<br>```</p></blockquote><p>这个 ` 符号是markdown的关键字啊，初学还不知道怎么进代码里面，暂时写在引用里面吧😂原谅我~~</p><h3 id="插入图片的两种方法"><a href="#插入图片的两种方法" class="headerlink" title="插入图片的两种方法"></a>插入图片的两种方法</h3><h4 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h4><p><img src="https://i.imgur.com/kVmlJT7.jpg" alt="" title="你把鼠标放图片上就看见我了"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://i.imgur.com/kVmlJT7.jpg &quot;你把鼠标放图片上就看见我了&quot;)</span><br></pre></td></tr></table></figure></p><p>这种图片显示方式不能控制大小，位置，不是我需要的，往下看另一种👇</p><h4 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h4><p><div align="center"><br>    <img src="https://i.imgur.com/kVmlJT7.jpg" height="20%" width="200"><br>大家好我是痞子😏<br></div><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=&quot;center&quot;&gt;</span><br><span class="line">&lt;img src=&quot;https://i.imgur.com/kVmlJT7.jpg&quot;  height=&quot;20%&quot; width=&quot;200&quot;&gt;</span><br><span class="line">大家好我是痞子</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>这种方式可以控制图片显示的位置，以及大小</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用到的语法记录&lt;/p&gt;
&lt;h2 id=&quot;What-and-why❓&quot;&gt;&lt;a href=&quot;#What-and-why❓&quot; class=&quot;headerlink&quot; title=&quot;What and why❓&quot;&gt;&lt;/a&gt;What and why❓&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
      <category term="mark down" scheme="https://chentaospace.github.io/blog/categories/mark-down/"/>
    
    
      <category term="demo" scheme="https://chentaospace.github.io/blog/tags/demo/"/>
    
  </entry>
  
</feed>
